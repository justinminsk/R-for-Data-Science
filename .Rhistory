library(tidyverse)#need to load this every time
ggplot(data = diamonds) +
geom_point(mapping = aes(x = displ, y =hwy), postion = "jitter")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), postion = "jitter")
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_boxplot() +
coord_flip()
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot() +
coord_flip()
diamonds
StatCount
stat_count(diamonds)
ggplot(data = diamonds) +
stat_count(cut)
ggplot(data = diamonds) +
stat_count(mapping = aes(cut))
library(tidyverse)
library(nycflights13)
install.packages("nycflights13")
library(nycflights13)
library("nycflights13")
nycflights12::flights
library(nycflights13)
install.packages("nycflights13")
library(nycflights13)
nycflights12::flights
#chapter 3
nycflights13::flights
Veiw(flights)
veiw(flights)
View(flights)
filter(flights, month == 1, day == 1)
(jan1 <- filter(flights, month == 1, day == 1))
nov_dec <- filter(flights, month %in% c(11, 12))
nov_dec
View(nov_dec)
arrange(flights, year, month, day)
Veiw(arrange(flights, year, month, day))
View(arrange(flights, year, month, day))
arrange(flights, desc(arr_delay))
select(flights, year, month, day)
flights_sml <- select(flights, year:day, ends_with("delay"), distance, aur_time)
library(tidyverse)
library(nycflights13)
flights_sml <- select(flights, year:day, ends_with("delay"), distance, aur_time)
flights_sml <- select(flights, year:day, ends_with("delay"), distance, air_time)
mutate(flights_sml, gain = arr_delay - dep_dealy, speed = distance / air_time * 60)
mutate(flights_sml, gain = arr_delay - dep_delay, speed = distance / air_time * 60)
transmute(flights, gain = arr_delay - dep_delay, hours = air_time / 60, gain_per_hour = gain/hours )
x <- 1:10
lag(x)
lead(x)
cumsum(x)
cymmean(x)
cummean(x)
min_rank(x)
by_day <- group_by(flights, year, month, day)
summarise(by_day, delay = mean(dep_delay, na.rm = true))
summarise(by_day, delay = mean(dep_delay, na.rm = true))
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE))
library(tidyverse)
library(nycflights13)
by_dest <- group_by(flights, dest)
delay <- summarise(by_dest, count = n(), dist = mean(distance, na.rm = TRUE), delay = mean(arr_delay, na.rm + TRUE))
delay <- summarize(by_dest, count = n(), dist = mean(distance, na.rm = TRUE), delay = mean(arr_delay, na.rm + TRUE))
delay <- summarize(by_dest, count = n(), dist = mean(distance, na.rm = TRUE), delay = mean(arr_delay, na.rm = TRUE))
delay <- filter(delay, count > 20, dest != "HNL")
ggplot(data = delay, mapping = aes(x = dist, y = delay)) +
geom_point(aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
delays <- flights %>%
group_by(dest) %>%
summarize(count = n(), dist = mean(distance, na.ra = TRUE), delay = mean(arr_delay, na.ra = TRUE)) %>%
filter(count > 20, dest != "HNL")
ggplot(data = delay, mapping = aes(x = dist, y = delay)) +
geom_point(aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
library(tidyverse) # Library I am using for ggplot2 and dplyr
mpg #First set of data
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth()
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
library(tidyverse) # Library I am using for ggplot2 and dplyr
library(tidyverse)
library(nycflights13)
setwd("C:/Users/justin/Desktop/R-for-Data-Science")
library(tidyverse)#need to load this every time
diamonds #second data set
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamond) +
stat_count(maping = aes(x = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop.., group = 1))
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x = cut, y = depth),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, color = cut, fill = cut))
library(tidyverse)
ggplot(data = diamonds) %>%
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
diamonds %>%
count(cut)
ggplot(data = diamonds) +
geom_histogram(mapping = aes(x = carat), binwidth = 0.5)
diamonds %>%
count(cut_width(carat, 0.5))
smaller <- diamonds %>%
filter(carat < 3)
ggplot(data = smaller, mapping = aes(x = carat)) +
geom_histogram(binwidth = 0.1)
ggplot(data = smaller, mapping = aes(x = carat, color = cut)) +
geom_freqpoly(binwidth = 0.1)
ggplot(data = smaller, mapping = aes(x = carat)) +
geom_histogram(binwidth = 0.1)
ggplot(data = smaller, mapping = aes(x = carat, color = cut)) +
geom_freqpoly(binwidth = 0.1)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = y), binwidth = 0.5)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = y), binwidth = 0.5) +
coord_cartesian(ylim = c(0, 50))
unusual <- diamonds %>%
filter(y < 3 | y > 20) %>%
arrange(y)
unusual <- diamonds %>%
filter(y < 3 | y > 20) %>%
arrange(y)
unusual
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 100)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 1000)
pricewrong <- diamonds %>%
filter(price < 0, price >15000) %>%
arrange(desc(price))
pricewrong
pricewrong
pricewrong <- diamonds %>%
filter(price < 0) %>%
arrange(price)
pricewrong
veiw(pricewrong)
view(pricewrong)
pricewrong <- diamonds %>%
filter(price < 0) %>%
arrange(price) %>%
select(price, carat, cut, color, clarity, x, y)
pricewrong
pricewrong <- diamonds %>%
filter(price < 0) %>%
arrange(price) %>%
#filter the price for below zero
pricewrong
pricewrong <- diamonds %>%
filter(price < 0) %>%
arrange(price) %>%
#filter the price for below zero
pricewrong
pricewrong <- diamonds %>%
filter(price < 0) %>%
arrange(price) %>%
#filter the price for below zero
pricewrong
pricewrong <- diamonds %>%
filter(price < 0) %>%
arrange(price) %>%
#filter the price for below zero
pricewrong
pricewrong <- diamonds %>%
filter(price < 0) %>%
arrange(price)
pricewrong
unusual
pricewrong <- diamonds %>%
filter(price < 10) %>%
arrange(price)
pricewrong
pricewrong <- diamonds %>%
filter(price < 100) %>%
arrange(price)
pricewrong
pricewrong <- diamonds %>%
filter(price < 1000) %>%
arrange(price)
pricewrong
pricewrong <- diamonds %>%
filter(price == na) %>%
arrange(price)
pricewrong <- diamonds %>%
filter(price = na) %>%
arrange(price)
pricewrong <- diamonds %>%
filter(price == "na") %>%
arrange(price)
pricewrong
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price < 1000), binwidth = 10000)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 10000) +
coord_cartesian(ylim = c(0, 50))
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 10000) +
coord_cartesian(xlim = c(0, 1000))
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 1000) +
coord_cartesian(xlim = c(0, 1000))
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 1000) +
coord_cartesian(xlim = c(-100, 1000))
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 100) +
coord_cartesian(xlim = c(-100, 1000))
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 100) +
coord_cartesian(xlim = c(-1000, 1000))
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 100) +
coord_cartesian(xlim = c(10000, 20000))
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 100) +
coord_cartesian(xlim = c(10000, 25000))
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 100) +
coord_cartesian(xlim = c(15000, 25000))
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 100) +
coord_cartesian(xlim = c(15000, 30000))
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 100) +
coord_cartesian(xlim = c(0, 5000))
library(tidyverse)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 100) +
coord_cartesian(xlim = c(0, 5000))
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 100) +
coord_cartesian(xlim = c(0, 1500))
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 100) +
coord_cartesian(xlim = c(0, 1400))
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 100) +
coord_cartesian(xlim = c(300, 1400))
spike <- diamonds %>%
filter(between(price, 300, 1400))
spike
spike <- diamonds %>%
filter(between(price, 300, 1400)) +
arrange(desc(price))
spike <- diamonds %>%
filter(between(price, 300, 1400)) +
arrange(price)
spike <- diamonds %>%
filter(between(price, 300, 1400))
veiw(spike)
view(spike)
spike
spike <- diamonds %>%
filter(between(price, 300, 1400)) +
arrange(price)
spike <- diamonds %>%
filter(between(price, 300, 1400))
spike
spike <- diamonds %>%
filter(between(price, 300, 1400)) %>%
arrange(price)
spike
View(price)
View("spike")
View(spike)
spike %>%
count(price, cut_width(10))
spike %>%
count(price, 10)
spike %>%
count(price, 100)
spike %>%
count(price, cut_width(100))
spike %>%
count(cut_width(price, 100))
spike2 <- spike %>%
filter(between(price, 600, 800))
spike2
View(spike2)
ggplot(spike2) +
geom_bar(mapping = aes(x = carat, color = cut))
ggplot(spike2) +
geom_bar(mapping = aes(x = carat, color = fill cut))
ggplot(spike2) +
geom_bar(mapping = aes(x = carat, fill_color = cut))
ggplot(spike2) +
geom_bar(mapping = aes(x = carat, color = cut, color = fill))
ggplot(spike2) +
geom_bar(mapping = aes(x = carat, color = cut))
ggplot(spike2) +
geom_bar(mapping = aes(x = carat, color = cut, fill = cut))
highcarat <- spike2 %>%
filter(between(carat, 0.35, 0.45)) %>%
arrange(price)
View(highcarat)
highcarat <- spike2 %>%
filter(between(carat, 0.35, 0.45), cut == "ideal", cut == "premium") %>%
arrange(price)
View(highcarat)
highcarat <- spike2 %>%
filter(between(carat, 0.35, 0.45), cut = "ideal", cut = "premium") %>%
arrange(price)
highcarat <- spike2 %>%
filter(between(carat, 0.35, 0.45), cut == "ideal", cut == "premium") %>%
arrange(price)
highcarat <- spike2 %>%
filter(between(carat, 0.35, 0.45), cut == "ideal" | "premium") %>%
arrange(price)
highcarat <- spike2 %>%
filter(between(carat, 0.35, 0.45), cut == "ideal") %>%
arrange(price)
View(highcarat)
highcarat <- spike2 %>%
filter(between(carat, 0.39, 0.43), cut == "ideal") %>%
arrange(price)
View(highcarat)
highcarat
highcarat <- spike2 %>%
filter(between(carat, 0.39, 0.43), cut == ideal) %>%
arrange(price)
highcarat <- spike2 %>%
filter(between(carat, 0.39, 0.43), cut == ideal) %>%
arrange(price)
highcarat <- spike2 %>%
filter(between(carat, 0.39, 0.43)) %>%
arrange(price)
highcarat
highcarat <- spike2 %>%
filter(between(carat, 0.38, 0.43)) %>%
arrange(price)
count(carat)
highcarat %>%
count(carat)
highcarat <- spike2 %>%
filter(between(carat, 0.4, 0.41)) %>%
arrange(price)
highcarat %>%
count(carat)
highcarat %>%
count(cut)
highcarat &>&
count(cut_width(price, 50))
highcarat &>&
count(price)
highcarat %>%
count(cut_width(price, 50))
highcarat %>%
count(cut)
highcarat %>%
count(cut_width(price, 50))
highcarat %>%
filter(cut == "Ideal")
highcarat %>%
filter(between(price, 675, 725))
highcarat2 <- highcarat %>%
filter(between(price, 675, 725))
ggplot(highcarat2) +
geom_bar(mapping = aes(x = carat, color = cut, fill = cut))
ggplot(highcarat2) +
geom_bar(mapping = aes(x = price, color = cut, fill = cut))
ggplot(highcarat2) +
geom_boxplot(mapping = aes(x = price, color = cut, fill = cut))
ggplot(highcarat2) +
geom_boxplot(mapping = aes(x = price, y = cut))
ggplot(highcarat2) +
geom_boxplot(mapping = aes(y = price, x = cut))
ggplot(highcarat2) +
geom_boxplot(mapping = aes(y = price, x = cut, color = carat, fill = carat))
ggplot(highcarat2) +
geom_boxplot(mapping = aes(y = price, x = cut, color = carat))
ggplot(highcarat2) +
geom_boxplot(mapping = aes(y = price, x = cut))
ggplot(spike2) +
geom_boxplot(mapping = aes(y = price, x = cut))
ggplot(spike2) +
geom_boxplot(mapping = aes(y = price, x = cut, color = carat, fill = carat))
ggplot(spike2) +
geom_boxplot(mapping = aes(y = price, x = cut, color = carat))
ggplot(spike2) +
geom_boxplot(mapping = aes(y = price, x = cut))
ggplot(highcarat) +
geom_boxplot(mapping = aes(y = price, x = cut))
ggplot(highcarat2) +
geom_boxplot(mapping = aes(y = price, x = cut))
ggplot(highcarat) +
geom_boxplot(mapping = aes(y = price, x = cut))
highcarat2 %>%
filter(cut == "Premium")
Veiw(highcarat2 %>%
filter(cut == "Premium"))
highcarat3 <- highcarat2 %>%
filter(cut == "Premium")
View(highcarat3)
highcarat2 %>%
filter(cut == "Premium") %>%
count(cut_width(price, 5))
highcarat2 %>%
filter(cut == "Premium", carat == 0.4) %>%
count(cut_width(price, 5))
highcarat2 %>%
filter(cut == "Premium", carat == 0.41) %>%
count(cut_width(price, 5))
highcarat2 %>%
filter(cut == "Premium", between(price, 680, 690))
ggplot(highcarat2) +
geom_boxplot(mapping = aes(y = price, x = y))
ggplot(highcarat2) +
geom_boxplot(mapping = aes(y = y, x = cut))
ggplot(spike2) +
geom_boxplot(mapping = aes(y = y, x = cut))
ggplot(spike) +
geom_boxplot(mapping = aes(y = y, x = cut))
ggplot(spike) +
geom_boxplot(mapping = aes(y = y, x = price))
ggplot(spike) +
geom_boxplot(mapping = aes(y = y, x = cut_width(price,500))
ggplot(spike) +
geom_boxplot(mapping = aes(y = y, x = cut_width(price,500)))
ggplot(spike) +
geom_histogram(mapping = aes(y = y, x = price, binwidth = 500)
ggplot(spike) +
geom_histogram(mapping = aes(y = y, x = price, binwidth = 500))
